class PizzaSize:
    def __init__(self, name, price):
        self.name = name
        self.price = price

    def check_budget(self, budget):
        if not isinstance(budget, (int, float)) or budget <= 0:
            raise ValueError("Budget cannot be negative ")
        return True

    def calculate_balance(self, budget):
        return budget - self.price

    def suggest_size(self, budget):
        try:
            self.check_budget(budget)
            if budget > self.price:
                print(f"You can buy {self.name} size.")
            elif budget == self.price:
                print(f"You can buy {self.name} size. No balance remaining.")
            else:
                print(f"You are not able to buy {self.name} size.")
        except ValueError as ve:
            print(ve)



small = PizzaSize("Small", 99)
medium = PizzaSize("Medium", 149)
large = PizzaSize("Large", 229)

while True:
    try:
        budget = float(input("Enter your budget: "))
        if budget <= 0:
            raise ValueError("Budget cannot be negative ")
        break
    except ValueError:
        print("Invalid input.")

small.suggest_size(budget)
medium.suggest_size(budget)
large.suggest_size(budget)
